{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/redux/reduxyt/src/app/features/posts/Postslist.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { selectAllPosts, getPostsStatus, getPostsError } from \"./postsSlice\";\n// import PostsExcerpt from \"./PostsExcerpt\";\n// import PostsExcerpt from \"../PostsExcerpt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  const posts = useSelector(selectAllPosts);\n  const postStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n  let content;\n  if (postStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 19\n    }, this);\n  } else if (postStatus === 'succeeded') {\n    const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date));\n    content = orderedPosts.map(post => /*#__PURE__*/_jsxDEV(PostExcerpts, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this));\n  } else if (postStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(PostsList, \"XsgVW7S7WzcmAcdb4Vqo0XId7IU=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","selectAllPosts","getPostsStatus","getPostsError","jsxDEV","_jsxDEV","PostsList","_s","posts","postStatus","error","content","children","fileName","_jsxFileName","lineNumber","columnNumber","orderedPosts","slice","sort","a","b","date","localeCompare","map","post","PostExcerpts","id","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/redux/reduxyt/src/app/features/posts/Postslist.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectAllPosts, getPostsStatus, getPostsError } from \"./postsSlice\";\n// import PostsExcerpt from \"./PostsExcerpt\";\n// import PostsExcerpt from \"../PostsExcerpt\";\n\nconst PostsList = () => {\n\n    const posts = useSelector(selectAllPosts);\n    const postStatus = useSelector(getPostsStatus);\n    const error = useSelector(getPostsError);\n\n    let content;\n    if (postStatus === 'loading') {\n        content = <p>\"Loading...\"</p>;\n    } else if (postStatus === 'succeeded') {\n        const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare(a.date))\n        content = orderedPosts.map(post =>\n           <PostExcerpts key={post.id} post={post} />)\n    } else if (postStatus === 'failed') {\n        content = <p>{error}</p>;\n    }\n\n    return (\n        <section>\n            {content}\n        </section>\n    )\n}\nexport default PostsList"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,EAAEC,cAAc,EAAEC,aAAa,QAAQ,cAAc;AAC5E;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAMC,KAAK,GAAGR,WAAW,CAACC,cAAc,CAAC;EACzC,MAAMQ,UAAU,GAAGT,WAAW,CAACE,cAAc,CAAC;EAC9C,MAAMQ,KAAK,GAAGV,WAAW,CAACG,aAAa,CAAC;EAExC,IAAIQ,OAAO;EACX,IAAIF,UAAU,KAAK,SAAS,EAAE;IAC1BE,OAAO,gBAAGN,OAAA;MAAAO,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACjC,CAAC,MAAM,IAAIP,UAAU,KAAK,WAAW,EAAE;IACnC,MAAMQ,YAAY,GAAGT,KAAK,CAACU,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAI,CAACC,aAAa,CAACH,CAAC,CAACE,IAAI,CAAC,CAAC;IAC/EX,OAAO,GAAGM,YAAY,CAACO,GAAG,CAACC,IAAI,iBAC5BpB,OAAA,CAACqB,YAAY;MAAeD,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACE,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC;EAClD,CAAC,MAAM,IAAIP,UAAU,KAAK,QAAQ,EAAE;IAChCE,OAAO,gBAAGN,OAAA;MAAAO,QAAA,EAAIF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5B;EAEA,oBACIX,OAAA;IAAAO,QAAA,EACKD;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAElB,CAAC;AAAAT,EAAA,CAtBKD,SAAS;EAAA,QAEGN,WAAW,EACNA,WAAW,EAChBA,WAAW;AAAA;AAAA4B,EAAA,GAJvBtB,SAAS;AAuBf,eAAeA,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}