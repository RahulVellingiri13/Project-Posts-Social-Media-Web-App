{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/ReactionButtons.js\",\n  _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { reactionAdded } from \"./postsSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reactionEmoj = {\n  thumbsUp: \"👍🏻\",\n  wow: \"🤩\",\n  heart: \"❤️\",\n  rocket: \"🚀\",\n  coffee: \"☕️\"\n};\nconst ReactionButtons = ({\n  post\n}) => {\n  _s();\n  const dispatch = useDispatch();\n\n  //'Object' and '.entries' are methods here, so that we can display the emojis as buttons\n  const reactionButtons = Object.entries(reactionEmoj).map(([name, emoj]) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"reactionButton\",\n      onClick: () => {\n        dispatch(reactionAdded({\n          postId: post.id,\n          reaction: name\n        }));\n      },\n      children: [emoj, \" \", post.reactions[name]]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ReactionButtons\n  }, void 0, false);\n};\n_s(ReactionButtons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ReactionButtons;\nexport default ReactionButtons;\nvar _c;\n$RefreshReg$(_c, \"ReactionButtons\");","map":{"version":3,"names":["useDispatch","reactionAdded","jsxDEV","_jsxDEV","Fragment","_Fragment","reactionEmoj","thumbsUp","wow","heart","rocket","coffee","ReactionButtons","post","_s","dispatch","reactionButtons","Object","entries","map","name","emoj","type","className","onClick","postId","id","reaction","children","reactions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/ReactionButtons.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { reactionAdded } from \"./postsSlice\";\n\nconst reactionEmoj = {\n  thumbsUp: \"👍🏻\",\n  wow: \"🤩\",\n  heart: \"❤️\",\n  rocket: \"🚀\",\n  coffee: \"☕️\",\n};\n\nconst ReactionButtons = ({ post }) => {\n  const dispatch = useDispatch();\n\n  //'Object' and '.entries' are methods here, so that we can display the emojis as buttons\n  const reactionButtons = Object.entries(reactionEmoj).map(([name, emoj]) => {\n    return (\n      <button\n        key={name}\n        type=\"button\"\n        className=\"reactionButton\"\n        onClick={() => {\n          dispatch(reactionAdded({ postId: post.id, reaction: name }));\n        }}\n      >\n        {emoj} {post.reactions[name]}\n      </button>\n    );\n  });\n\n  return <>{ReactionButtons}</>;\n};\n\nexport default ReactionButtons;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,MAAM;EAChBC,GAAG,EAAE,IAAI;EACTC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMgB,eAAe,GAAGC,MAAM,CAACC,OAAO,CAACZ,YAAY,CAAC,CAACa,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,KAAK;IACzE,oBACElB,OAAA;MAEEmB,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAC,gBAAgB;MAC1BC,OAAO,EAAEA,CAAA,KAAM;QACbT,QAAQ,CAACd,aAAa,CAAC;UAAEwB,MAAM,EAAEZ,IAAI,CAACa,EAAE;UAAEC,QAAQ,EAAEP;QAAK,CAAC,CAAC,CAAC;MAC9D,CAAE;MAAAQ,QAAA,GAEDP,IAAI,EAAC,GAAC,EAACR,IAAI,CAACgB,SAAS,CAACT,IAAI,CAAC;IAAA,GAPvBA,IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQH,CAAC;EAEb,CAAC,CAAC;EAEF,oBAAO9B,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EAAGhB;EAAe,gBAAG,CAAC;AAC/B,CAAC;AAACE,EAAA,CApBIF,eAAe;EAAA,QACFZ,WAAW;AAAA;AAAAkC,EAAA,GADxBtB,eAAe;AAsBrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}