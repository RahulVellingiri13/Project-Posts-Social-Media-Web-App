{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/SinglePostPage.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { selectPostById } from \"../posts/postsSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SinglePostPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const post = useSelector(state => selectPostById(state, Number()));\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post not Found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body.substring(0, 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postCredit\",\n        children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n          userId: post.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n          timestamp: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactionButtons, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(SinglePostPage, \"ka4dfvJy8Yu6dziZi3eXrrK5qPY=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = SinglePostPage;\nexport default SinglePostPage;\nvar _c;\n$RefreshReg$(_c, \"SinglePostPage\");","map":{"version":3,"names":["useSelector","useParams","selectPostById","jsxDEV","_jsxDEV","Fragment","_Fragment","SinglePostPage","_s","postId","post","state","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","title","body","substring","className","PostAuthor","userId","TimeAgo","timestamp","date","ReactionButtons","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/SinglePostPage.js"],"sourcesContent":["import { useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport {selectPostById} from \"../posts/postsSlice\"\n\n\n\nconst SinglePostPage =()=>{\n\n    const {postId} = useParams()\n\n    const post = useSelector((state)=>selectPostById(state,Number()))\n\n    if(!post){\n        return(\n            <section>\n                <h2>Post not Found!</h2>\n            </section>\n        )\n    }\n\n\nreturn(<>\n\n<article>\n      <h3>{post.title}</h3>\n      <p>{post.body.substring(0, 100)}</p>\n      <p className=\"postCredit\">\n        <PostAuthor userId={post.userId} />\n        <TimeAgo timestamp={post.date} />\n        \n      </p>\n      <ReactionButtons post = {post}/>\n    </article>\n    \n</>)\n\n}\n\nexport default SinglePostPage"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,cAAc,QAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIlD,MAAMC,cAAc,GAAEA,CAAA,KAAI;EAAAC,EAAA;EAEtB,MAAM;IAACC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE5B,MAAMS,IAAI,GAAGV,WAAW,CAAEW,KAAK,IAAGT,cAAc,CAACS,KAAK,EAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAEjE,IAAG,CAACF,IAAI,EAAC;IACL,oBACIN,OAAA;MAAAS,QAAA,eACIT,OAAA;QAAAS,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAElB;EAGJ,oBAAOb,OAAA,CAAAE,SAAA;IAAAO,QAAA,eAEPT,OAAA;MAAAS,QAAA,gBACMT,OAAA;QAAAS,QAAA,EAAKH,IAAI,CAACQ;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBb,OAAA;QAAAS,QAAA,EAAIH,IAAI,CAACS,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE,GAAG;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCb,OAAA;QAAGiB,SAAS,EAAC,YAAY;QAAAR,QAAA,gBACvBT,OAAA,CAACkB,UAAU;UAACC,MAAM,EAAEb,IAAI,CAACa;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnCb,OAAA,CAACoB,OAAO;UAACC,SAAS,EAAEf,IAAI,CAACgB;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhC,CAAC,eACJb,OAAA,CAACuB,eAAe;QAACjB,IAAI,EAAIA;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC,gBAEZ,CAAC;AAEH,CAAC;AAAAT,EAAA,CA9BKD,cAAc;EAAA,QAECN,SAAS,EAEbD,WAAW;AAAA;AAAA4B,EAAA,GAJtBrB,cAAc;AAgCpB,eAAeA,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}