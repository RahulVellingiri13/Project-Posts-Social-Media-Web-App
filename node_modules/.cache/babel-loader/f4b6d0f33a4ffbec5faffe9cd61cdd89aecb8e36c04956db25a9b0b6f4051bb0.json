{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { postAdded } from \"./postsSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(\n      // {id:nanoid(),\n      // title,\n      // content,}\n      //rewriting the code, here for convenince of structure of data\n      title, content, userId));\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Add a new Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \" Post Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTite\",\n          name: \"postTitle\",\n          type: \"text\",\n          value: title,\n          onChange: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postContent\",\n          children: \" Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postContent\",\n          name: \"postContent\",\n          type: \"text\",\n          value: content,\n          onChange: onContentChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onSavePostClicked,\n          children: \"Save Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddPostForm, \"K8wV2cNwNeqaBCQMY79H3IzJH+I=\", false, function () {\n  return [useDispatch];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["useState","useDispatch","nanoid","postAdded","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPostForm","_s","dispatch","title","setTitle","content","setContent","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/AddPostForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { postAdded } from \"./postsSlice\";\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  \n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(\n        postAdded(\n          // {id:nanoid(),\n          // title,\n          // content,}\n          //rewriting the code, here for convenince of structure of data\n          title,\n          content,\n          userId\n        )\n      );\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n\n  return (\n    <>\n      <section>\n        <h2> Add a new Post </h2>\n        <form>\n          <label htmlFor=\"postTitle\"> Post Title:</label>\n          <input\n            id=\"postTite\"\n            name=\"postTitle\"\n            type=\"text\"\n            value={title}\n            onChange={onTitleChanged}\n          />\n          <label htmlFor=\"postContent\"> Content:</label>\n          <textarea\n            id=\"postContent\"\n            name=\"postContent\"\n            type=\"text\"\n            value={content}\n            onChange={onContentChanged}\n          />\n          <button type=\"button\" onClick={onSavePostClicked}>\n            Save Post\n          </button>\n        </form>\n      </section>\n    </>\n  );\n};\n\nexport default AddPostForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAG1C,MAAMe,cAAc,GAAIC,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACtD,MAAMC,gBAAgB,GAAIH,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE1D,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIT,KAAK,IAAIE,OAAO,EAAE;MACpBH,QAAQ,CACNP,SAAS;MACP;MACA;MACA;MACA;MACAQ,KAAK,EACLE,OAAO,EACPQ,MACF,CACF,CAAC;MACDT,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBrB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAOsB,OAAO,EAAC,WAAW;UAAAL,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CrB,OAAA;UACEuB,EAAE,EAAC,UAAU;UACbC,IAAI,EAAC,WAAW;UAChBC,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAEP,KAAM;UACboB,QAAQ,EAAEhB;QAAe;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFrB,OAAA;UAAOsB,OAAO,EAAC,aAAa;UAAAL,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CrB,OAAA;UACEuB,EAAE,EAAC,aAAa;UAChBC,IAAI,EAAC,aAAa;UAClBC,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAEL,OAAQ;UACfkB,QAAQ,EAAEZ;QAAiB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFrB,OAAA;UAAQyB,IAAI,EAAC,QAAQ;UAACE,OAAO,EAAEZ,iBAAkB;UAAAE,QAAA,EAAC;QAElD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACV,CAAC;AAEP,CAAC;AAACjB,EAAA,CAvDID,WAAW;EAAA,QACEP,WAAW;AAAA;AAAAgC,EAAA,GADxBzB,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}