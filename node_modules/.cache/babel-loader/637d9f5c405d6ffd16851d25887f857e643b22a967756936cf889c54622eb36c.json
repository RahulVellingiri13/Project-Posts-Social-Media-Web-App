{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/ReactionButtons.js\",\n  _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { reactionAdded } from \"./postsSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reactionEmoj = {\n  thumbsUp: '👍🏻',\n  wow: '🤩',\n  heart: '❤️',\n  rocket: '🚀',\n  coffee: '☕️'\n};\nconst ReactionButtons = ({\n  post\n}) => {\n  _s();\n  const dispatch = useDispatch();\n\n  //'Object' and '.entries' are methods here, so that we can display the emojis as buttons\n  const reactionButtons = Object.entries(reactionEmoj).map(([name, emoj]) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"reactionButton\",\n      onClick: () => {\n        dispatch(reactionAdded({\n          postId: post.id,\n          reaction: name\n        }));\n      },\n      children: [emoj, \" \", post.reactions[name]]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ReactionButtons\n  }, void 0, false);\n};\n_s(ReactionButtons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ReactionButtons;\nexport default ReactionButtons;\nvar _c;\n$RefreshReg$(_c, \"ReactionButtons\");","map":{"version":3,"names":["useDispatch","reactionAdded","jsxDEV","_jsxDEV","Fragment","_Fragment","reactionEmoj","thumbsUp","wow","heart","rocket","coffee","ReactionButtons","post","_s","dispatch","reactionButtons","Object","entries","map","name","emoj","type","className","onClick","postId","id","reaction","children","reactions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/ReactionButtons.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { reactionAdded } from \"./postsSlice\";\n\nconst reactionEmoj = {\n    thumbsUp:'👍🏻',\n    wow:'🤩',\n    heart:'❤️',\n    rocket:'🚀',\n    coffee:'☕️',\n}\n\nconst ReactionButtons =({post})=>{\nconst dispatch=useDispatch()\n\n    //'Object' and '.entries' are methods here, so that we can display the emojis as buttons\nconst reactionButtons = Object.entries(reactionEmoj).map(([name,emoj])=>{ \n    return (\n        <button \n        key={name}\n        type=\"button\"\n        className=\"reactionButton\"\n        onClick={()=>{\n            dispatch(reactionAdded({postId:post.id,reaction:name}))\n        }}\n        >\n            {emoj} {post.reactions[name]}\n        </button>\n    )\n})\n\nreturn(<>\n\n\n{ReactionButtons}\n\n</>)\n\n}\n\nexport default ReactionButtons"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAC,MAAM;EACfC,GAAG,EAAC,IAAI;EACRC,KAAK,EAAC,IAAI;EACVC,MAAM,EAAC,IAAI;EACXC,MAAM,EAAC;AACX,CAAC;AAED,MAAMC,eAAe,GAAEA,CAAC;EAACC;AAAI,CAAC,KAAG;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAACf,WAAW,CAAC,CAAC;;EAExB;EACJ,MAAMgB,eAAe,GAAGC,MAAM,CAACC,OAAO,CAACZ,YAAY,CAAC,CAACa,GAAG,CAAC,CAAC,CAACC,IAAI,EAACC,IAAI,CAAC,KAAG;IACpE,oBACIlB,OAAA;MAEAmB,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAC,gBAAgB;MAC1BC,OAAO,EAAEA,CAAA,KAAI;QACTT,QAAQ,CAACd,aAAa,CAAC;UAACwB,MAAM,EAACZ,IAAI,CAACa,EAAE;UAACC,QAAQ,EAACP;QAAI,CAAC,CAAC,CAAC;MAC3D,CAAE;MAAAQ,QAAA,GAEGP,IAAI,EAAC,GAAC,EAACR,IAAI,CAACgB,SAAS,CAACT,IAAI,CAAC;IAAA,GAP3BA,IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQD,CAAC;EAEjB,CAAC,CAAC;EAEF,oBAAO9B,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EAGNhB;EAAe,gBAEd,CAAC;AAEH,CAAC;AAAAE,EAAA,CA1BKF,eAAe;EAAA,QACNZ,WAAW;AAAA;AAAAkC,EAAA,GADpBtB,eAAe;AA4BrB,eAAeA,eAAe;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}