{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/Postslist.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { selectAllPosts } from \"./postsSlice\";\nimport PostAuthor from \"./PostAuthor\";\nimport TimeAgo from \"./TimeAgo\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  //   const posts = useSelector((state) => state.posts);\n  // rewriting the code so that we can keep the value of the useSelector dynamically\n  const posts = useSelector(selectAllPosts);\n  const orderedPosts = posts.slice().sort((a, b) => b.date.localeCompare);\n  const renderedPosts = posts.map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"postCredit\",\n      children: [/*#__PURE__*/_jsxDEV(PostAuthor, {\n        userId: post.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeAgo, {\n        timestamp: post.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), renderedPosts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(PostsList, \"6hBbuofx6pBPNuvOg59liqMeVP8=\", false, function () {\n  return [useSelector];\n});\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","selectAllPosts","PostAuthor","TimeAgo","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsList","_s","posts","orderedPosts","slice","sort","a","b","date","localeCompare","renderedPosts","map","post","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","substring","className","userId","timestamp","id","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/Postslist.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectAllPosts } from \"./postsSlice\";\nimport PostAuthor from \"./PostAuthor\";\nimport TimeAgo from \"./TimeAgo\";\n\nconst PostsList = () => {\n  //   const posts = useSelector((state) => state.posts);\n  // rewriting the code so that we can keep the value of the useSelector dynamically\n  const posts = useSelector(selectAllPosts);\n\nconst orderedPosts = posts.slice().sort((a,b)=>b.date.localeCompare)\n\n  const renderedPosts = posts.map((post) => (\n    <article key={post.id}>\n      <h3>{post.title}</h3>\n      <p>{post.content.substring(0, 100)}</p>\n      <p className=\"postCredit\">\n        <PostAuthor userId={post.userId} />\n        <TimeAgo timestamp={post.date} />\n      </p>\n    </article>\n  ));\n\n  return (\n    <>\n      <section>\n        <h2>Posts</h2>\n        {renderedPosts}\n      </section>\n    </>\n  );\n};\n\nexport default PostsList;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,cAAc;AAC7C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA;EACA,MAAMC,KAAK,GAAGV,WAAW,CAACC,cAAc,CAAC;EAE3C,MAAMU,YAAY,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAGA,CAAC,CAACC,IAAI,CAACC,aAAa,CAAC;EAElE,MAAMC,aAAa,GAAGR,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACnCf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAKD,IAAI,CAACE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBrB,OAAA;MAAAgB,QAAA,EAAID,IAAI,CAACO,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,GAAG;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCrB,OAAA;MAAGwB,SAAS,EAAC,YAAY;MAAAR,QAAA,gBACvBhB,OAAA,CAACH,UAAU;QAAC4B,MAAM,EAAEV,IAAI,CAACU;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCrB,OAAA,CAACF,OAAO;QAAC4B,SAAS,EAAEX,IAAI,CAACJ;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,GANQN,IAAI,CAACY,EAAE;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOZ,CACV,CAAC;EAEF,oBACErB,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACbR,aAAa;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACV,CAAC;AAEP,CAAC;AAACjB,EAAA,CA1BID,SAAS;EAAA,QAGCR,WAAW;AAAA;AAAAiC,EAAA,GAHrBzB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}