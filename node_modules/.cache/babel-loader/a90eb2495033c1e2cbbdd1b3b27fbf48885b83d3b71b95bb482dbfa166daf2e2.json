{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GitHub/Project-Posts-Social-Media-Web-App/src/app/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const [addRequestStatus, setAddRequestStatus] = useState('idle');\n  const users = useSelector(selectAllUsers);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n  const onSavePostClicked = () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending');\n        dispatch(addNewPost({\n          title,\n          body: content,\n          userId\n        })).unwrap();\n        setTitle('');\n        setContent('');\n        setUserId('');\n        navigate('/');\n      } catch (err) {\n        console.error('Failed to save the post', err);\n      } finally {\n        setAddRequestStatus('idle');\n      }\n    }\n  };\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPostForm, \"tblzZjdvgr+cxHOvj+HMTkXHHdQ=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","addNewPost","selectAllUsers","useNavigate","jsxDEV","_jsxDEV","AddPostForm","_s","dispatch","navigate","title","setTitle","content","setContent","userId","setUserId","addRequestStatus","setAddRequestStatus","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","canSave","every","Boolean","onSavePostClicked","body","unwrap","err","console","error","usersOptions","map","user","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GitHub/Project-Posts-Social-Media-Web-App/src/app/features/posts/AddPostForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AddPostForm = () => {\n    const dispatch = useDispatch()\n\n    const navigate = useNavigate()\n\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [userId, setUserId] = useState('')\n    const [addRequestStatus, setAddRequestStatus] = useState('idle')\n\n    const users = useSelector(selectAllUsers)\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onContentChanged = e => setContent(e.target.value)\n    const onAuthorChanged = e => setUserId(e.target.value)\n\n\n    const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n\n    const onSavePostClicked = () => {\n        if (canSave) {\n            try {\n                setAddRequestStatus('pending')\n                dispatch(addNewPost({ title, body: content, userId })).unwrap()\n\n                setTitle('')\n                setContent('')\n                setUserId('')\n                navigate('/')\n            } catch (err) {\n                console.error('Failed to save the post', err)\n            } finally {\n                setAddRequestStatus('idle')\n            }\n        }\n\n    }\n\n    const usersOptions = users.map(user => (\n        <option key={user.id} value={user.id}>\n            {user.name}\n        </option>\n    ))\n\n    return (\n        <section>\n            <h2>Add a New Post</h2>\n            <form>\n                <label htmlFor=\"postTitle\">Post Title:</label>\n                <input\n                    type=\"text\"\n                    id=\"postTitle\"\n                    name=\"postTitle\"\n                    value={title}\n                    onChange={onTitleChanged}\n                />\n                <label htmlFor=\"postAuthor\">Author:</label>\n                <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n                    <option value=\"\"></option>\n                    {usersOptions}\n                </select>\n                <label htmlFor=\"postContent\">Content:</label>\n                <textarea\n                    id=\"postContent\"\n                    name=\"postContent\"\n                    value={content}\n                    onChange={onContentChanged}\n                />\n                <button\n                    type=\"button\"\n                    onClick={onSavePostClicked}\n                    disabled={!canSave}\n                >Save Post</button>\n            </form>\n        </section>\n    )\n}\nexport default AddPostForm"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC;EAEhE,MAAMoB,KAAK,GAAGlB,WAAW,CAACE,cAAc,CAAC;EAEzC,MAAMiB,cAAc,GAAGC,CAAC,IAAIT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpD,MAAMC,gBAAgB,GAAGH,CAAC,IAAIP,UAAU,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxD,MAAME,eAAe,GAAGJ,CAAC,IAAIL,SAAS,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAGtD,MAAMG,OAAO,GAAG,CAACf,KAAK,EAAEE,OAAO,EAAEE,MAAM,CAAC,CAACY,KAAK,CAACC,OAAO,CAAC,IAAIX,gBAAgB,KAAK,MAAM;EAEtF,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIH,OAAO,EAAE;MACT,IAAI;QACAR,mBAAmB,CAAC,SAAS,CAAC;QAC9BT,QAAQ,CAACP,UAAU,CAAC;UAAES,KAAK;UAAEmB,IAAI,EAAEjB,OAAO;UAAEE;QAAO,CAAC,CAAC,CAAC,CAACgB,MAAM,CAAC,CAAC;QAE/DnB,QAAQ,CAAC,EAAE,CAAC;QACZE,UAAU,CAAC,EAAE,CAAC;QACdE,SAAS,CAAC,EAAE,CAAC;QACbN,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MACjD,CAAC,SAAS;QACNd,mBAAmB,CAAC,MAAM,CAAC;MAC/B;IACJ;EAEJ,CAAC;EAED,MAAMiB,YAAY,GAAGhB,KAAK,CAACiB,GAAG,CAACC,IAAI,iBAC/B/B,OAAA;IAAsBiB,KAAK,EAAEc,IAAI,CAACC,EAAG;IAAAC,QAAA,EAChCF,IAAI,CAACG;EAAI,GADDH,IAAI,CAACC,EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CACX,CAAC;EAEF,oBACItC,OAAA;IAAAiC,QAAA,gBACIjC,OAAA;MAAAiC,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtC,OAAA;MAAAiC,QAAA,gBACIjC,OAAA;QAAOuC,OAAO,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9CtC,OAAA;QACIwC,IAAI,EAAC,MAAM;QACXR,EAAE,EAAC,WAAW;QACdE,IAAI,EAAC,WAAW;QAChBjB,KAAK,EAAEZ,KAAM;QACboC,QAAQ,EAAE3B;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFtC,OAAA;QAAOuC,OAAO,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CtC,OAAA;QAAQgC,EAAE,EAAC,YAAY;QAACf,KAAK,EAAER,MAAO;QAACgC,QAAQ,EAAEtB,eAAgB;QAAAc,QAAA,gBAC7DjC,OAAA;UAAQiB,KAAK,EAAC;QAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACzBT,YAAY;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACTtC,OAAA;QAAOuC,OAAO,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CtC,OAAA;QACIgC,EAAE,EAAC,aAAa;QAChBE,IAAI,EAAC,aAAa;QAClBjB,KAAK,EAAEV,OAAQ;QACfkC,QAAQ,EAAEvB;MAAiB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFtC,OAAA;QACIwC,IAAI,EAAC,QAAQ;QACbE,OAAO,EAAEnB,iBAAkB;QAC3BoB,QAAQ,EAAE,CAACvB,OAAQ;QAAAa,QAAA,EACtB;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB,CAAC;AAAApC,EAAA,CA5EKD,WAAW;EAAA,QACIP,WAAW,EAEXI,WAAW,EAOdH,WAAW;AAAA;AAAAiD,EAAA,GAVvB3C,WAAW;AA6EjB,eAAeA,WAAW;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}