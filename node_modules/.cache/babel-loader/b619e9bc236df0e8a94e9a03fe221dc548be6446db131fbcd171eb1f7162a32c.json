{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const users = useSelector(selectAllUsers);\n  const [addRequestStatus, setAddRequestStatus] = useState();\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(\n      // {id:nanoid(),\n      // title,\n      // content,}\n      //rewriting the code, here for convenince of structure of data\n      title, content, userId));\n      setTitle(\"\");\n      setContent(\"\");\n      setUserId(\"\");\n    }\n  };\n  const userOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this));\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Add a new Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \" Post Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTite\",\n          name: \"postTitle\",\n          type: \"text\",\n          value: title,\n          onChange: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postAuthor\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"postAuthor\",\n          value: userId,\n          onChange: onAuthorChanged,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), userOptions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postContent\",\n          children: \" Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postContent\",\n          name: \"postContent\",\n          type: \"text\",\n          value: content,\n          onChange: onContentChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onSavePostClicked,\n          disabled: !canSave,\n          children: \"Save Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddPostForm, \"eVUA0YL+JtTJlqR1L8yoWOnOd9Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","addNewPost","selectAllUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPostForm","_s","dispatch","title","setTitle","content","setContent","userId","setUserId","users","addRequestStatus","setAddRequestStatus","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","onSavePostClicked","postAdded","userOptions","map","user","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","canSave","Boolean","htmlFor","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/AddPostForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n\n  const users = useSelector(selectAllUsers);\n\n  const [addRequestStatus,setAddRequestStatus] = useState()\n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n  const onAuthorChanged = (e) => setUserId(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(\n        postAdded(\n          // {id:nanoid(),\n          // title,\n          // content,}\n          //rewriting the code, here for convenince of structure of data\n          title,\n          content,\n          userId\n        )\n      );\n      setTitle(\"\");\n      setContent(\"\");\n      setUserId(\"\");\n    }\n  };\n\n  const userOptions = users.map(user => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ))\n\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId)\n\n  return (\n    <>\n      <section>\n        <h2> Add a new Post </h2>\n        <form>\n          <label htmlFor=\"postTitle\"> Post Title:</label>\n          <input\n            id=\"postTite\"\n            name=\"postTitle\"\n            type=\"text\"\n            value={title}\n            onChange={onTitleChanged}\n          />\n\n          <label htmlFor=\"postAuthor\">Author:</label>\n          <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n            <option value=\"\"></option>\n            {userOptions}\n          </select>\n\n          <label htmlFor=\"postContent\"> Content:</label>\n          <textarea\n            id=\"postContent\"\n            name=\"postContent\"\n            type=\"text\"\n            value={content}\n            onChange={onContentChanged}\n          />\n          <button type=\"button\" onClick={onSavePostClicked} disabled={!canSave}>\n            Save Post\n          </button>\n        </form>\n      </section>\n    </>\n  );\n};\n\nexport default AddPostForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}