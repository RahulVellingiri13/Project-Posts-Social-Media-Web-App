{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GitHub/Project-Posts-Social-Media-Web-App/src/app/features/posts/Postslist.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { selectPostIds, getPostsStatus, getPostsError } from \"./postsSlice\";\nimport PostsExcerpt from \"../posts/PostExcerpt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  const orderedPostIds = useSelector(selectPostIds);\n  const postStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n  let content;\n  if (postStatus === \"loading\") {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this);\n  } else if (postStatus === \"succeeded\") {\n    content = orderedPostIds.map(postId => /*#__PURE__*/_jsxDEV(PostsExcerpt, {\n      postId: postId\n    }, postId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this));\n  } else if (postStatus === \"failed\") {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_s(PostsList, \"uejUxRqY5Q0TjWZsqSDle0thT3Q=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","selectPostIds","getPostsStatus","getPostsError","PostsExcerpt","jsxDEV","_jsxDEV","PostsList","_s","orderedPostIds","postStatus","error","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","postId","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GitHub/Project-Posts-Social-Media-Web-App/src/app/features/posts/Postslist.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { selectPostIds, getPostsStatus, getPostsError } from \"./postsSlice\";\nimport PostsExcerpt from \"../posts/PostExcerpt\";\n\nconst PostsList = () => {\n  const orderedPostIds = useSelector(selectPostIds);\n  const postStatus = useSelector(getPostsStatus);\n  const error = useSelector(getPostsError);\n\n  let content;\n  if (postStatus === \"loading\") {\n    content = <p>\"Loading...\"</p>;\n  } else if (postStatus === \"succeeded\") {\n    content = orderedPostIds.map((postId) => (\n      <PostsExcerpt key={postId} postId={postId} />\n    ));\n  } else if (postStatus === \"failed\") {\n    content = <p>{error}</p>;\n  }\n\n  return <section>{content}</section>;\n};\nexport default PostsList;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,EAAEC,cAAc,EAAEC,aAAa,QAAQ,cAAc;AAC3E,OAAOC,YAAY,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,cAAc,GAAGT,WAAW,CAACC,aAAa,CAAC;EACjD,MAAMS,UAAU,GAAGV,WAAW,CAACE,cAAc,CAAC;EAC9C,MAAMS,KAAK,GAAGX,WAAW,CAACG,aAAa,CAAC;EAExC,IAAIS,OAAO;EACX,IAAIF,UAAU,KAAK,SAAS,EAAE;IAC5BE,OAAO,gBAAGN,OAAA;MAAAO,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/B,CAAC,MAAM,IAAIP,UAAU,KAAK,WAAW,EAAE;IACrCE,OAAO,GAAGH,cAAc,CAACS,GAAG,CAAEC,MAAM,iBAClCb,OAAA,CAACF,YAAY;MAAce,MAAM,EAAEA;IAAO,GAAvBA,MAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAC7C,CAAC;EACJ,CAAC,MAAM,IAAIP,UAAU,KAAK,QAAQ,EAAE;IAClCE,OAAO,gBAAGN,OAAA;MAAAO,QAAA,EAAIF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC1B;EAEA,oBAAOX,OAAA;IAAAO,QAAA,EAAUD;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACrC,CAAC;AAACT,EAAA,CAjBID,SAAS;EAAA,QACUP,WAAW,EACfA,WAAW,EAChBA,WAAW;AAAA;AAAAoB,EAAA,GAHrBb,SAAS;AAkBf,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}