{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\n// const initialState = [\n//   {\n//     id: \"0\",\n//     name: \"Rahul\",\n//   },\n//   {\n//     id: \"1\",\n//     name: \"Vijay\",\n//   },\n//   {\n//     id: \"2\",\n//     name: \"Samantha\",\n//   },\n// ];\n\n//rewriting the initial state so that we can fetch the data from the apis\n\nconst initialState = [];\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await axios.get(USERS_URL);\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport const selectAllUsers = state => state.users;\nexport const selectUserById = (state, userId) => state.users.find(user => user.id === userId);\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","USERS_URL","initialState","fetchUsers","response","get","data","usersSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectAllUsers","users","selectUserById","userId","find","user","id","reducer"],"sources":["/Users/rahul/Documents/GitHub/Project-Posts-Social-Media-Web-App/src/app/features/users/usersSlice.js"],"sourcesContent":["import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\n// const initialState = [\n//   {\n//     id: \"0\",\n//     name: \"Rahul\",\n//   },\n//   {\n//     id: \"1\",\n//     name: \"Vijay\",\n//   },\n//   {\n//     id: \"2\",\n//     name: \"Samantha\",\n//   },\n// ];\n\n//rewriting the initial state so that we can fetch the data from the apis\n\nconst initialState =[];\n\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async()=>{\n  const response = await axios.get(USERS_URL);\n  return response.data\n})\n\nconst usersSlice = createSlice({\n  name:\"users\",\n  initialState,\n  reducers:{},\n  extraReducers(builder){\nbuilder\n.addCase(fetchUsers.fulfilled,(state,action)=>{\n  return action.payload;\n})\n  }\n})\n\nexport const selectAllUsers = (state)=> state.users;\n\nexport const selectUserById = (state,userId)=> state.users.find(user=>user.id === userId)\n\nexport default usersSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAGC,gBAAgB,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAG,4CAA4C;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMC,YAAY,GAAE,EAAE;AAEtB,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CAAC,kBAAkB,EAAE,YAAS;EACtE,MAAMK,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,SAAS,CAAC;EAC3C,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAC7BU,IAAI,EAAC,OAAO;EACZN,YAAY;EACZO,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAaA,CAACC,OAAO,EAAC;IACxBA,OAAO,CACNC,OAAO,CAACT,UAAU,CAACU,SAAS,EAAC,CAACC,KAAK,EAACC,MAAM,KAAG;MAC5C,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;EACA;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAIH,KAAK,IAAIA,KAAK,CAACI,KAAK;AAEnD,OAAO,MAAMC,cAAc,GAAGA,CAACL,KAAK,EAACM,MAAM,KAAIN,KAAK,CAACI,KAAK,CAACG,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAAC;AAEzF,eAAeb,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}