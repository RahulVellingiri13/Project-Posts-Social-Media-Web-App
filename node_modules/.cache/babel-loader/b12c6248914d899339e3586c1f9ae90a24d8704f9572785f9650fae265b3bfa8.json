{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/AddPostForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { postAdded } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const users = useSelector(selectAllUsers);\n  const onTitleChanged = e => setTitle(e.target.value);\n  const onContentChanged = e => setContent(e.target.value);\n  const onAuthorChanged = e => setUserId(e.target.value);\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded(\n      // {id:nanoid(),\n      // title,\n      // content,}\n      //rewriting the code, here for convenince of structure of data\n      title, content, userId));\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n  const userOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this));\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Add a new Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: \" Post Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postTite\",\n          name: \"postTitle\",\n          type: \"text\",\n          value: title,\n          onChange: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postAuthor\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"postAuthor\",\n          value: userId,\n          onChange: onAuthorChanged,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), userOptions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postContent\",\n          children: \" Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"postContent\",\n          name: \"postContent\",\n          type: \"text\",\n          value: content,\n          onChange: onContentChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onSavePostClicked,\n          children: \"Save Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddPostForm, \"xhNCmoOfXV8pfg78nTJCrofpLcA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","nanoid","postAdded","selectAllUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPostForm","_s","dispatch","title","setTitle","content","setContent","userId","setUserId","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","onSavePostClicked","userOptions","map","user","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","canSave","Boolean","htmlFor","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/AddPostForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { postAdded } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n  const onAuthorChanged = (e) => setUserId(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(\n        postAdded(\n          // {id:nanoid(),\n          // title,\n          // content,}\n          //rewriting the code, here for convenince of structure of data\n          title,\n          content,\n          userId\n        )\n      );\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n\n  const userOptions = users.map(user => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ))\n\n  const canSave = Boolean(title) && Boolean(content) && Boolean(userId)\n\n  return (\n    <>\n      <section>\n        <h2> Add a new Post </h2>\n        <form>\n          <label htmlFor=\"postTitle\"> Post Title:</label>\n          <input\n            id=\"postTite\"\n            name=\"postTitle\"\n            type=\"text\"\n            value={title}\n            onChange={onTitleChanged}\n          />\n\n          <label htmlFor=\"postAuthor\">Author:</label>\n          <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n            <option value=\"\"></option>\n            {userOptions}\n          </select>\n\n          <label htmlFor=\"postContent\"> Content:</label>\n          <textarea\n            id=\"postContent\"\n            name=\"postContent\"\n            type=\"text\"\n            value={content}\n            onChange={onContentChanged}\n          />\n          <button type=\"button\" onClick={onSavePostClicked}>\n            Save Post\n          </button>\n        </form>\n      </section>\n    </>\n  );\n};\n\nexport default AddPostForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}