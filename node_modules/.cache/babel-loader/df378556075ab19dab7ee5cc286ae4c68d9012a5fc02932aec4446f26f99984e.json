{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: '1',\n  title: 'Macbook',\n  content: 'It is hard'\n}, {\n  id: '2',\n  title: 'Windows',\n  content: 'It is Easy'\n}];\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    // postAdded(state,action){\n    //     state.push(action.payload)\n    // }\n    //rewriting the code her for updating the structure of the data\n    postAdded: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(title, content) {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            content\n          }\n        };\n      }\n    }\n  }\n});\n\n//creating and exporting selectAllPosts , so that we can export the changes in it dynamically \nexport const selectAllPosts = state => state.posts;\nexport const {\n  postAdded\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","id","title","content","postsSlice","name","reducers","postAdded","reducer","state","action","push","payload","prepare","selectAllPosts","posts","actions"],"sources":["/Users/rahul/Documents/GT/React/reduxyt/src/app/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\n\nconst initialState = [\n    {\n        id: '1',\n        title:'Macbook' ,\n        content: 'It is hard',\n    },\n    {\n        id:'2',\n        title:'Windows',\n        content:'It is Easy'\n    }\n]\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers:{\n        // postAdded(state,action){\n        //     state.push(action.payload)\n        // }\n//rewriting the code her for updating the structure of the data\npostAdded:{\nreducer(state,action){\n    state.push(action.payload)\n},\nprepare(title,content){\n    return{\n        payload:{\n            id:nanoid(),\n            title,\n            content,\n        }\n    }\n}\n\n\n } }\n})\n\n//creating and exporting selectAllPosts , so that we can export the changes in it dynamically \nexport const selectAllPosts = (state)=>state.posts;\n\nexport const {postAdded} = postsSlice.actions\n\nexport default postsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAGtD,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,GAAG;EACPC,KAAK,EAAC,SAAS;EACfC,OAAO,EAAE;AACb,CAAC,EACD;EACIF,EAAE,EAAC,GAAG;EACNC,KAAK,EAAC,SAAS;EACfC,OAAO,EAAC;AACZ,CAAC,CACJ;AAED,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC3BO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAC;IACL;IACA;IACA;IACR;IACAC,SAAS,EAAC;MACVC,OAAOA,CAACC,KAAK,EAACC,MAAM,EAAC;QACjBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC9B,CAAC;MACDC,OAAOA,CAACX,KAAK,EAACC,OAAO,EAAC;QAClB,OAAM;UACFS,OAAO,EAAC;YACJX,EAAE,EAACF,MAAM,CAAC,CAAC;YACXG,KAAK;YACLC;UACJ;QACJ,CAAC;MACL;IAGC;EAAE;AACH,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMW,cAAc,GAAIL,KAAK,IAAGA,KAAK,CAACM,KAAK;AAElD,OAAO,MAAM;EAACR;AAAS,CAAC,GAAGH,UAAU,CAACY,OAAO;AAE7C,eAAeZ,UAAU,CAACI,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}